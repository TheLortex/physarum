#version 430

layout (local_size_x = 32, local_size_y = 32) in;


layout (set = 0, binding = 0) readonly uniform Height { 
    uint v;
} height;

layout (set = 0, binding = 1) readonly buffer GridI {
    uint v[];
} grid_input;

layout (set = 0, binding = 2) writeonly buffer GridO {
    uint v[];
} grid_output;

layout (set = 0, binding = 3) writeonly buffer ImageO {
    uint v[];
 } image_output;


void main() {
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;
    uint count = 0;
    count += grid_input.v[height.v*(x - 1) + (y-1)] + grid_input.v[height.v * x + (y-1)] + grid_input.v[height.v*(x + 1) + (y-1)];
    count += grid_input.v[height.v*(x - 1) + y]     +                                    + grid_input.v[height.v*(x + 1) + y];
    count += grid_input.v[height.v*(x - 1) + (y+1)] + grid_input.v[height.v * x + (y+1)] + grid_input.v[height.v*(x + 1) + (y+1)];

    uint status = uint((count == 3) || ((grid_input.v[height.v*x + y] == 1) && (count == 2)));
    uint color = status > 0 ? 0x88ddffff : 0;

    grid_output.v[height.v*x + y] = status;
    image_output.v[height.v*x + y] = color;
}
